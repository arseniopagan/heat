heat_template_version: '2016-10-14'

description: >
  Sets up 1 SecOnion16 instances for rapid prototyping with mem.es2

parameters:
  name:
    type: string
    default: sec_onion
  image:
    type: string
    default: "Ubuntu 16.04"
  username:
    type: string
    default: user
  password:
    type: string
    hidden: true
    default: pass

resources:

# admin net

  network:
    type: OS::Neutron::Net
    properties:
      name: network
      port_security_enabled: false

  router:
    type: OS::Neutron::Router    
    properties:
      name: router
      external_gateway_info:
        network: public

  router_interface:
    type:  OS::Neutron::RouterInterface
    properties:
      router: { get_resource: router }
      subnet: { get_resource: subnet }

  subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: 192.168.100.0/24
      network: { get_resource: network }
      name: subnet
      dns_nameservers: [ "10.50.255.254" ]
      gateway_ip: 192.168.100.1

# monitor net

  mon_network:
    type: OS::Neutron::Net
    properties:
      name: mon_network
      port_security_enabled: false

  mon_router:
    type: OS::Neutron::Router    
    properties:
      name: mon_router
      external_gateway_info:
        network: public

  mon_router_interface:
    type:  OS::Neutron::RouterInterface
    properties:
      router: { get_resource: mon_router }
      subnet: { get_resource: mon_subnet }

  mon_subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.0.10.0/24
      network: { get_resource: mon_network }
      name: subnet
      dns_nameservers: [ "10.50.255.254" ]
      gateway_ip: 10.0.10.1

  host1:
    type: OS::Nova::Server
    properties:
      name: 
        str_replace:
          template: |
            $inst_name1
          params:
            $inst_name: { get_param: name }
      image: { get_param: image }
      flavor: mem.es2
      networks: 
        - network: { get_resource: network }
          fixed_ip: 192.168.100.10
        - network: { get_resource: mon_network }
      user_data_format: RAW
      user_data: { get_resource: host_config }

  host_config:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/bin/bash
            export DEBIAN_FRONTEND=noninteractive
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            useradd $username -m -U -s /bin/bash
            echo "$username:$password" | chpasswd
            usermod -aG sudo $username
            shutdown -r now
          params:
            $username: { get_param: username }
            $password: { get_param: password }

